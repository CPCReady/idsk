#!/bin/bash


# Script para probar f√≥rmula de Homebrew localmente
# Created by Destroyer 2025

set -e

# Colores
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m'

FORMULA_FILE="Formula/idsk.rb"
PROJECT_NAME="iDSK"

show_help() {
    echo "Uso: $0 [opciones]"
    echo ""
    echo "Opciones:"
    echo "  --audit         Solo ejecutar audit"
    echo "  --test          Solo ejecutar tests"
    echo "  --install       Instalar f√≥rmula"
    echo "  --full          Ejecutar audit, test e instalar"
    echo "  --setup-tap     Solo configurar el tap"
    echo "  --cleanup       Desinstalar y limpiar"
    echo "  -h, --help      Mostrar esta ayuda"
}

setup_tap() {
    # Verificar si el tap existe
    TAP_DIR="$(brew --repository)/Library/Taps/cpcready/homebrew-cpcready"
    if [ ! -d "$TAP_DIR" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  El tap cpcready/cpcready no existe. Cre√°ndolo...${NC}"
        if ! brew tap cpcready/cpcready; then
            echo -e "${RED}‚ùå Error al crear el tap. Aseg√∫rate de que tienes permisos de escritura.${NC}"
            return 1
        fi
    fi
    
    # Copiar f√≥rmula al tap si no est√° actualizada
    if [ ! -f "$TAP_DIR/idsk.rb" ] || [ "$FORMULA_FILE" -nt "$TAP_DIR/idsk.rb" ]; then
        echo -e "${BLUE}üìã Copiando f√≥rmula al tap...${NC}"
        if ! cp "$FORMULA_FILE" "$TAP_DIR/"; then
            echo -e "${RED}‚ùå Error al copiar la f√≥rmula al tap${NC}"
            return 1
        fi
        echo -e "${GREEN}‚úÖ F√≥rmula copiada al tap${NC}"
    else
        echo -e "${GREEN}‚úÖ F√≥rmula ya est√° actualizada en el tap${NC}"
    fi
}

run_audit() {
    echo -e "${BLUE}üîç Ejecutando brew audit...${NC}"
    setup_tap
    
    # Ejecutar audit usando el tap
    if brew audit cpcready/cpcready/idsk; then
        echo -e "${GREEN}‚úÖ Audit pasado${NC}"
    else
        echo -e "${RED}‚ùå Audit fall√≥${NC}"
        return 1
    fi
}

run_test() {
    echo -e "${BLUE}üß™ Ejecutando brew test...${NC}"
    setup_tap
    
    # Verificar si la f√≥rmula est√° instalada, si no, instalarla
    if ! brew list cpcready/cpcready/idsk &> /dev/null; then
        echo -e "${YELLOW}‚ö†Ô∏è  La f√≥rmula no est√° instalada. Instalando primero...${NC}"
        if ! brew install --build-from-source cpcready/cpcready/idsk; then
            echo -e "${RED}‚ùå Error al instalar la f√≥rmula${NC}"
            return 1
        fi
    fi
    
    # Ejecutar test usando el tap
    if brew test cpcready/cpcready/idsk; then
        echo -e "${GREEN}‚úÖ Tests pasados${NC}"
    else
        echo -e "${RED}‚ùå Tests fallaron${NC}"
        return 1
    fi
}

install_formula() {
    echo -e "${BLUE}üì¶ Instalando f√≥rmula desde fuente...${NC}"
    setup_tap
    
    # Verificar si ya est√° instalada
    if brew list cpcready/cpcready/idsk &> /dev/null; then
        echo -e "${YELLOW}‚ö†Ô∏è  La f√≥rmula ya est√° instalada. Reinstalando...${NC}"
        brew uninstall cpcready/cpcready/idsk
    fi
    
    if brew install --build-from-source cpcready/cpcready/idsk; then
        echo -e "${GREEN}‚úÖ Instalaci√≥n exitosa${NC}"
        
        # Probar comandos b√°sicos
        echo -e "${BLUE}üîß Probando comandos b√°sicos...${NC}"
        if command -v "$PROJECT_NAME" &> /dev/null; then
            echo -e "${GREEN}‚úÖ Comando $PROJECT_NAME disponible${NC}"
            
            # Probar ayuda (iDSK requiere argumentos)
            echo -e "${BLUE}‚ùì Probando ayuda...${NC}"
            "$PROJECT_NAME" 2>&1 | head -10
            
            # Probar funcionalidad b√°sica
            echo -e "${BLUE}‚öôÔ∏è  Probando funcionalidad b√°sica...${NC}"
            # Crear un DSK de prueba
            if "$PROJECT_NAME" /tmp/test_idsk.dsk -n 2>/dev/null; then
                echo -e "${GREEN}‚úÖ Creaci√≥n de DSK funciona${NC}"
                # Verificar que se cre√≥ el archivo
                if [ -f "/tmp/test_idsk.dsk" ]; then
                    echo -e "${GREEN}‚úÖ Archivo DSK creado correctamente${NC}"
                    # Listar contenido del DSK vac√≠o
                    if "$PROJECT_NAME" /tmp/test_idsk.dsk -l 2>/dev/null | grep -q "No file"; then
                        echo -e "${GREEN}‚úÖ Listado de DSK funciona${NC}"
                    else
                        echo -e "${YELLOW}‚ö†Ô∏è  Listado de DSK produce salida inesperada pero no fall√≥${NC}"
                    fi
                    rm -f /tmp/test_idsk.dsk
                else
                    echo -e "${RED}‚ùå No se cre√≥ el archivo DSK${NC}"
                fi
            else
                echo -e "${RED}‚ùå Funcionalidad b√°sica fall√≥${NC}"
            fi
            
        else
            echo -e "${RED}‚ùå Comando $PROJECT_NAME no disponible despu√©s de instalaci√≥n${NC}"
            return 1
        fi
    else
        echo -e "${RED}‚ùå Instalaci√≥n fall√≥${NC}"
        return 1
    fi
}

cleanup_formula() {
    echo -e "${BLUE}üßπ Limpiando instalaci√≥n...${NC}"
    if brew list idsk &> /dev/null; then
        brew uninstall idsk
        echo -e "${GREEN}‚úÖ idsk desinstalado${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  idsk no estaba instalado${NC}"
    fi
}

# Verificar que existe la f√≥rmula
if [ ! -f "$FORMULA_FILE" ]; then
    echo -e "${RED}‚ùå No se encontr√≥ $FORMULA_FILE${NC}"
    exit 1
fi

# Procesar argumentos
case "${1:-}" in
    --audit)
        run_audit
        ;;
    --test)
        run_test
        ;;
    --install)
        install_formula
        ;;
    --setup-tap)
        echo -e "${BLUE}üîß Configurando tap...${NC}"
        setup_tap
        echo -e "${GREEN}‚úÖ Tap configurado${NC}"
        ;;
    --full)
        echo -e "${BLUE}üöÄ Ejecutando tests completos...${NC}"
        run_audit
        run_test
        install_formula
        echo -e "${GREEN}üéâ Todos los tests completados${NC}"
        ;;
    --cleanup)
        cleanup_formula
        ;;
    -h|--help)
        show_help
        ;;
    "")
        echo -e "${BLUE}üîç Ejecutando tests b√°sicos...${NC}"
        run_audit
        echo -e "${GREEN}‚úÖ Tests b√°sicos completados${NC}"
        echo ""
        echo "Para m√°s opciones:"
        echo "  $0 --full     # Tests completos + instalaci√≥n"
        echo "  $0 --help    # Ayuda completa"
        ;;
    *)
        echo -e "${RED}‚ùå Opci√≥n desconocida: $1${NC}"
        show_help
        exit 1
        ;;
esac